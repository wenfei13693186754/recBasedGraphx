package com.wdcloud.graphx.recommend

import java.io.File
import java.io.FileOutputStream
import java.io.PrintStream
import java.io.Serializable

import com.wdcloud.graphx.kafka.Producer
import com.wdcloud.graphx.unit.CreateSparkContext
import com.wdcloud.graphx.unit.DataToJson

import akka.event.slf4j.Logger
import org.apache.spark.SparkContext
import com.wdcloud.graphx.unit.CreateSparkContext
import org.apache.spark.storage.StorageLevel

/**
 * 使用spark-graphx实现基于好友、圈子来实现推荐二度好友、圈子、物品
 * 		要求：1.离线的、全量的；
 * 				 2.各种关系基于不同权重进行推荐
 * 
 * jobserver调用
 *
 */
object RecEng extends Serializable {
    
  val logger = Logger(this.getClass.getName)   
  
  def startRec (
      sc: SparkContext, 
      namespace: String, 
      edgeTable: String, 
      pAttrTable: String, 
      iAttrTable: String
      ){    
    //创建图
    val graph = CreateGraph.createGraph(sc, namespace, edgeTable, pAttrTable, iAttrTable)
    //调用推荐算法进行推荐结果的计算   
    val recCode = new RecCode(graph, namespace)
    val recResult = recCode.recForUsers()
    //将结果转化为json格式
    val jsonResult = DataToJson.recResultRDDToJson(recResult).persist(StorageLevel.MEMORY_ONLY_SER)
    
    //将结果放到kafka中
    val kafkaProducer = Producer.sendMsgToKafka(jsonResult, namespace)  
    jsonResult.unpersist(blocking = false)
  }  
}

